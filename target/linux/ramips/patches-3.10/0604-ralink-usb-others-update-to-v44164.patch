Index: linux-3.10.49/drivers/usb/core/file.c
===================================================================
--- linux-3.10.49/drivers/usb/core/file.c
+++ linux-3.10.49/drivers/usb/core/file.c
@@ -23,6 +23,13 @@
 
 #include "usb.h"
 
+#define replace_fops(f, fops) \
+	do {    \
+		struct file *__file = (f); \
+		fops_put(__file->f_op); \
+		BUG_ON(!(__file->f_op = (fops))); \
+	} while(0)
+
 #define MAX_USB_MINORS	256
 static const struct file_operations *usb_minors[MAX_USB_MINORS];
 static DECLARE_RWSEM(minor_rwsem);
Index: linux-3.10.49/drivers/usb/serial/bus.c
===================================================================
--- linux-3.10.49/drivers/usb/serial/bus.c
+++ linux-3.10.49/drivers/usb/serial/bus.c
@@ -16,6 +16,18 @@
 #include <linux/usb.h>
 #include <linux/usb/serial.h>
 
+
+#define __ATTRIBUTE_GROUPS(_name)               \
+	static const struct attribute_group *_name##_groups[] = {   \
+		&_name##_group,                 \
+		NULL,                           \
+	}
+#define ATTRIBUTE_GROUPS(_name)                 \
+	static const struct attribute_group _name##_group = {       \
+		.attrs = _name##_attrs,         \
+	};                                  \
+	__ATTRIBUTE_GROUPS(_name)
+
 static int usb_serial_device_match(struct device *dev,
 						struct device_driver *drv)
 {
Index: linux-3.10.49/include/linux/device.h
===================================================================
--- linux-3.10.49/include/linux/device.h
+++ linux-3.10.49/include/linux/device.h
@@ -40,6 +40,17 @@
 struct iommu_ops;
 struct iommu_group;
 
+#define __ATTR_WO(_name) {                      \
+	.attr   = { .name = __stringify(_name), .mode = S_IWUSR },  \
+	.store  = _name##_store,                    \
+}
+
+#define __ATTR_RW(_name) __ATTR(_name, (S_IWUSR | S_IRUGO),     \
+	_name##_show, _name##_store)
+
+#define __ATTR_NULL { .attr = { .name = NULL } }
+
+
 struct bus_attribute {
 	struct attribute	attr;
 	ssize_t (*show)(struct bus_type *bus, char *buf);
@@ -98,11 +109,18 @@
 	struct device_attribute	*dev_attrs;
 	struct driver_attribute	*drv_attrs;
 
+	const struct attribute_group **bus_groups;
+	const struct attribute_group **dev_groups;
+	const struct attribute_group **drv_groups;
+
 	int (*match)(struct device *dev, struct device_driver *drv);
 	int (*uevent)(struct device *dev, struct kobj_uevent_env *env);
 	int (*probe)(struct device *dev);
 	int (*remove)(struct device *dev);
 	void (*shutdown)(struct device *dev);
+	
+	int (*online)(struct device *dev);
+	int (*offline)(struct device *dev);
 
 	int (*suspend)(struct device *dev, pm_message_t state);
 	int (*resume)(struct device *dev);
@@ -254,8 +272,13 @@
 };
 
 #define DRIVER_ATTR(_name, _mode, _show, _store)	\
-struct driver_attribute driver_attr_##_name =		\
-	__ATTR(_name, _mode, _show, _store)
+	struct driver_attribute driver_attr_##_name = __ATTR(_name, _mode, _show, _store)
+#define DRIVER_ATTR_RW(_name) \
+	struct driver_attribute driver_attr_##_name = __ATTR_RW(_name)
+#define DRIVER_ATTR_RO(_name) \
+	struct driver_attribute driver_attr_##_name = __ATTR_RO(_name)
+#define DRIVER_ATTR_WO(_name) \
+	struct driver_attribute driver_attr_##_name = __ATTR_WO(_name)
 
 extern int __must_check driver_create_file(struct device_driver *driver,
 					const struct driver_attribute *attr);
@@ -504,6 +527,12 @@
 
 #define DEVICE_ATTR(_name, _mode, _show, _store) \
 	struct device_attribute dev_attr_##_name = __ATTR(_name, _mode, _show, _store)
+#define DEVICE_ATTR_RW(_name) \
+	struct device_attribute dev_attr_##_name = __ATTR_RW(_name)
+#define DEVICE_ATTR_RO(_name) \
+	struct device_attribute dev_attr_##_name = __ATTR_RO(_name)
+#define DEVICE_ATTR_WO(_name) \
+	struct device_attribute dev_attr_##_name = __ATTR_WO(_name)
 #define DEVICE_ULONG_ATTR(_name, _mode, _var) \
 	struct dev_ext_attribute dev_attr_##_name = \
 		{ __ATTR(_name, _mode, device_show_ulong, device_store_ulong), &(_var) }
Index: linux-3.10.49/include/linux/dma-mapping.h
===================================================================
--- linux-3.10.49/include/linux/dma-mapping.h
+++ linux-3.10.49/include/linux/dma-mapping.h
@@ -138,6 +138,21 @@
 	return ret;
 }
 
+static inline int dma_set_mask_and_coherent(struct device *dev, u64 mask)
+{
+	int rc = dma_set_mask(dev, mask);
+	if (rc == 0)
+		dma_set_coherent_mask(dev, mask);
+	return rc;
+}
+
+static inline int dma_coerce_mask_and_coherent(struct device *dev, u64 mask)
+{
+	dev->dma_mask = &dev->coherent_dma_mask;
+	return dma_set_mask_and_coherent(dev, mask);
+}
+
+
 #ifdef CONFIG_HAS_DMA
 static inline int dma_get_cache_alignment(void)
 {
Index: linux-3.10.49/include/linux/scatterlist.h
===================================================================
--- linux-3.10.49/include/linux/scatterlist.h
+++ linux-3.10.49/include/linux/scatterlist.h
@@ -342,5 +342,6 @@
 		    unsigned int nents, unsigned int flags);
 bool sg_miter_next(struct sg_mapping_iter *miter);
 void sg_miter_stop(struct sg_mapping_iter *miter);
+bool sg_miter_skip(struct sg_mapping_iter *miter, off_t offset);
 
 #endif /* _LINUX_SCATTERLIST_H */
Index: linux-3.10.49/include/linux/tty.h
===================================================================
--- linux-3.10.49/include/linux/tty.h
+++ linux-3.10.49/include/linux/tty.h
@@ -124,7 +124,7 @@
 #define O_VTDLY(tty)	_O_FLAG((tty), VTDLY)
 #define O_FFDLY(tty)	_O_FLAG((tty), FFDLY)
 
-#define C_BAUD(tty)	_C_FLAG((tty), CBAUD)
+#define C_BAUD(tty)		_C_FLAG((tty), CBAUD)
 #define C_CSIZE(tty)	_C_FLAG((tty), CSIZE)
 #define C_CSTOPB(tty)	_C_FLAG((tty), CSTOPB)
 #define C_CREAD(tty)	_C_FLAG((tty), CREAD)
@@ -134,11 +134,12 @@
 #define C_CLOCAL(tty)	_C_FLAG((tty), CLOCAL)
 #define C_CIBAUD(tty)	_C_FLAG((tty), CIBAUD)
 #define C_CRTSCTS(tty)	_C_FLAG((tty), CRTSCTS)
+#define C_CMSPAR(tty)   _C_FLAG((tty), CMSPAR)
 
-#define L_ISIG(tty)	_L_FLAG((tty), ISIG)
+#define L_ISIG(tty)		_L_FLAG((tty), ISIG)
 #define L_ICANON(tty)	_L_FLAG((tty), ICANON)
 #define L_XCASE(tty)	_L_FLAG((tty), XCASE)
-#define L_ECHO(tty)	_L_FLAG((tty), ECHO)
+#define L_ECHO(tty)		_L_FLAG((tty), ECHO)
 #define L_ECHOE(tty)	_L_FLAG((tty), ECHOE)
 #define L_ECHOK(tty)	_L_FLAG((tty), ECHOK)
 #define L_ECHONL(tty)	_L_FLAG((tty), ECHONL)
Index: linux-3.10.49/lib/scatterlist.c
===================================================================
--- linux-3.10.49/lib/scatterlist.c
+++ linux-3.10.49/lib/scatterlist.c
@@ -547,6 +547,49 @@
 }
 EXPORT_SYMBOL(sg_miter_stop);
 
+static bool sg_miter_get_next_page(struct sg_mapping_iter *miter)
+{
+	if (!miter->__remaining) {
+		struct scatterlist *sg;
+		unsigned long pgoffset;
+		
+		if (!__sg_page_iter_next(&miter->piter))
+			return false;
+			
+		sg = miter->piter.sg;
+		pgoffset = miter->piter.sg_pgoffset;
+		
+		miter->__offset = pgoffset ? 0 : sg->offset;
+		miter->__remaining = sg->offset + sg->length - 
+			(pgoffset << PAGE_SHIFT) - miter->__offset;
+		miter->__remaining = min_t(unsigned long, miter->__remaining,
+				PAGE_SIZE - miter->__offset);
+	}
+
+	return true;
+}
+
+
+bool sg_miter_skip(struct sg_mapping_iter *miter, off_t offset)
+{
+	sg_miter_stop(miter);
+	
+	while (offset) {
+		off_t consumed;
+		
+		if (!sg_miter_get_next_page(miter))
+			return false;
+			
+		consumed = min_t(off_t, offset, miter->__remaining);
+		miter->__offset += consumed;
+		miter->__remaining -= consumed;
+		offset -= consumed;
+	}
+	
+	return true;
+}
+EXPORT_SYMBOL(sg_miter_skip);
+
 /**
  * sg_copy_buffer - Copy data between a linear buffer and an SG list
  * @sgl:		 The SG list
@@ -560,7 +603,8 @@
  *
  **/
 static size_t sg_copy_buffer(struct scatterlist *sgl, unsigned int nents,
-			     void *buf, size_t buflen, int to_buffer)
+			     void *buf, size_t buflen, off_t skip,
+				 int to_buffer)
 {
 	unsigned int offset = 0;
 	struct sg_mapping_iter miter;
@@ -573,6 +617,9 @@
 		sg_flags |= SG_MITER_TO_SG;
 
 	sg_miter_start(&miter, sgl, nents, sg_flags);
+	
+	if (!sg_miter_skip(&miter, skip))
+		return false;
 
 	local_irq_save(flags);
 
@@ -608,7 +655,7 @@
 size_t sg_copy_from_buffer(struct scatterlist *sgl, unsigned int nents,
 			   void *buf, size_t buflen)
 {
-	return sg_copy_buffer(sgl, nents, buf, buflen, 0);
+	return sg_copy_buffer(sgl, nents, buf, buflen, 0, false);
 }
 EXPORT_SYMBOL(sg_copy_from_buffer);
 
@@ -625,6 +672,6 @@
 size_t sg_copy_to_buffer(struct scatterlist *sgl, unsigned int nents,
 			 void *buf, size_t buflen)
 {
-	return sg_copy_buffer(sgl, nents, buf, buflen, 1);
+	return sg_copy_buffer(sgl, nents, buf, buflen, 0, true);
 }
 EXPORT_SYMBOL(sg_copy_to_buffer);
